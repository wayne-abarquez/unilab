"""empty message

Revision ID: 55540bae47a
Revises: None
Create Date: 2017-07-07 01:59:14.573565

"""

# revision identifiers, used by Alembic.
revision = '55540bae47a'
down_revision = None

from alembic import op
import sqlalchemy as sa
import geoalchemy2


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('boundary_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('latlng', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=False),
    sa.Column('average_monthly_income', sa.Numeric(), nullable=True),
    sa.Column('average_patrons', sa.Float(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('merchant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('specialty', sa.String(length=100), nullable=True),
    sa.Column('latlng', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.Column('date_released', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('territory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('code', sa.CHAR(length=5), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('boundary',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('typeid', sa.Integer(), nullable=False),
    sa.Column('parentid', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('geom', geoalchemy2.types.Geometry(), nullable=True),
    sa.Column('population', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parentid'], ['boundary.id'], ),
    sa.ForeignKeyConstraint(['typeid'], ['boundary_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('branch_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('branchid', sa.Integer(), nullable=False),
    sa.Column('productid', sa.Integer(), nullable=False),
    sa.Column('qty_released', sa.Float(), nullable=True),
    sa.Column('unit_of_measure', sa.String(length=50), nullable=True),
    sa.Column('date_released', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['branchid'], ['branch.id'], ),
    sa.ForeignKeyConstraint(['productid'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('merchantid', sa.Integer(), nullable=False),
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=20), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('transaction_date', sa.DateTime(), nullable=True),
    sa.Column('cost', sa.Numeric(), nullable=True),
    sa.Column('address', sa.String(length=500), nullable=True),
    sa.Column('start_point_latlng', geoalchemy2.types.Geometry(geometry_type='POINT'), nullable=True),
    sa.Column('travel_time_in_minutes', sa.Float(), nullable=True),
    sa.Column('average_travel_time_in_minutes', sa.Float(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['merchantid'], ['merchant.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_territory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=True),
    sa.Column('date_modified', sa.DateTime(), nullable=True),
    sa.Column('userid', sa.Integer(), nullable=False),
    sa.Column('territoryid', sa.Integer(), nullable=False),
    sa.Column('date_assigned', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.ForeignKeyConstraint(['territoryid'], ['territory.id'], ),
    sa.ForeignKeyConstraint(['userid'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_territory')
    op.drop_table('transaction')
    op.drop_table('user')
    op.drop_table('branch_product')
    op.drop_table('boundary')
    op.drop_table('territory')
    op.drop_table('role')
    op.drop_table('product')
    op.drop_table('merchant')
    op.drop_table('branch')
    op.drop_table('boundary_type')
    ### end Alembic commands ###
